import{w,r as h,R as t,_ as a,x as M,y as R,z as E,I as u,V as v,F as A,aO as V,A as x,L as S,X as U,M as H,C as L,Y as F,E as g,N,S as n,aP as P,aQ as q,k as _}from"../main-do863ioiri.js";const B=a("Add Custom Code","urlslab"),k="rule_id",f={name:a("Rule name","urlslab"),is_active:a("Active rule","urlslab"),labels:a("Tags","urlslab")},l={match_type:a("Match type","urlslab"),match_url:a("Match URL","urlslab"),rule_order:a("Order","urlslab"),match_headers:a("Request headers","urlslab"),match_cookie:a("Cookies","urlslab"),match_params:a("Request parameters","urlslab"),match_ip:a("Visitor IP","urlslab"),match_roles:a("Roles","urlslab"),match_capabilities:a("Capabilities","urlslab"),match_browser:a("Browser","urlslab"),is_logged:a("Is logged in","urlslab"),is_single:a("Is single","urlslab"),is_singular:a("Is singular","urlslab"),is_attachment:a("Is attachment","urlslab"),is_page:a("Is page","urlslab"),is_home:a("Is home","urlslab"),is_front_page:a("Is front page","urlslab"),is_category:a("Is category","urlslab"),is_search:a("Is search","urlslab"),is_tag:a("Is tag","urlslab"),is_author:a("Is author","urlslab"),is_archive:a("Is archive","urlslab"),is_sticky:a("Is sticky","urlslab"),is_tax:a("Is taxonomy","urlslab"),is_feed:a("Is feed","urlslab"),is_paged:a("Is paged","urlslab"),add_http_headers:a("Custom HTTP Headers","urlslab"),add_start_headers:a("After `<head>`","urlslab"),add_end_headers:a("Before `</head>`","urlslab"),add_start_body:a("After `<body>`","urlslab"),add_end_body:a("Before `</body>`","urlslab")};function j({slug:c}){const d=w(i=>i.setTable),[s,o]=h.useState(!1);return h.useEffect(()=>{o(!0),d(c,{title:B,paginationId:k,slug:c,header:f,id:"name"})},[d,c]),s&&t.createElement(D,{slug:c})}function D({slug:c}){const{columnHelper:d,data:s,isLoading:o,isSuccess:i,isFetchingNextPage:b,ref:e}=M({slug:c}),I=h.useMemo(()=>{var r;return(r=s==null?void 0:s.pages)==null?void 0:r.flatMap(m=>m??[])},[s==null?void 0:s.pages]),y=w(r=>r.setTable),{deleteRow:C,updateRow:p}=R(),T=h.useMemo(()=>[d.accessor("check",{className:"nolimit checkbox",cell:r=>t.createElement(E,{tableElement:r}),header:r=>t.createElement(E,{tableElement:r})}),d.accessor("name",{className:"nolimit",cell:r=>t.createElement(u,{type:"text",value:r.getValue(),onChange:m=>p({newVal:m,cell:r})}),header:r=>t.createElement(v,{...r}),size:200}),d.accessor("is_active",{className:"nolimit",cell:r=>t.createElement(A,{value:r.getValue(),onChange:m=>p({newVal:m,cell:r})}),header:r=>t.createElement(v,{...r}),size:100}),d.accessor("labels",{className:"nolimit",cell:r=>t.createElement(V,{value:r.getValue(),slug:c,onChange:m=>p({newVal:m,cell:r})}),header:f.labels,size:160}),d.accessor("editRow",{className:"editRow",cell:r=>t.createElement(x,{onEdit:()=>p({cell:r,id:"name"}),onDelete:()=>C({cell:r,id:"name"})}),header:()=>null,size:0})],[d,C,c,p]);return h.useEffect(()=>{y(c,{data:s})},[s,y,c]),o?t.createElement(S,{isFullscreen:!0}):t.createElement(t.Fragment,null,t.createElement(U,{title:a("About this table","urlslab"),tableSlug:c,isMainTableDescription:!0},a("The table displays a list of code injection rules applied to the generated page. If the page matches the rule conditions, the HTML headers and content are supplemented with the provided HTML, CSS, or JavaScript codes. With the option to define custom rules, you can create a variety of code injection combinations based on numerous condition types. To implement a specific code onto all pages of your website, navigate to the Settings tab to establish an injection applicable to all pages.","urlslab")),t.createElement(H,null),t.createElement(L,{className:"fadeInto",columns:T,data:i&&I,referrer:e,loadingRows:b},t.createElement(F,null)),t.createElement(O,{slug:c}))}const O=h.memo(({slug:c})=>{const d=g(e=>e.rowToEdit),s=g(e=>e.setRowToEdit),{columnTypes:o}=N(c),i=o==null?void 0:o.is_single.values,b=h.useMemo(()=>({name:t.createElement(u,{liveUpdate:!0,autoFocus:!0,type:"text",defaultValue:"",label:f.name,onChange:e=>s({name:e})}),rule_order:t.createElement(u,{liveUpdate:!0,type:"number",defaultValue:"10",label:l.rule_order,onChange:e=>s({rule_order:e})}),is_active:t.createElement(A,{defaultValue:!0,onChange:e=>s({is_active:e})},f.is_active),labels:t.createElement(V,{optionItem:!0,label:a("Tags:","urlslab"),slug:c,onChange:e=>s({labels:e})}),match_type:t.createElement(n,{defaultAccept:!0,autoClose:!0,items:o==null?void 0:o.match_type.values,name:"match_type",defaultValue:"E",description:a("Choose when the rule should be applied","urlslab"),section:a("Rule Conditions","urlslab"),onChange:e=>s({match_type:e})},l.match_type),match_url:t.createElement(u,{type:"url",liveUpdate:!0,defaultValue:"",label:l.match_url,hidden:(d==null?void 0:d.match_type)==="A",description:a("Match this value with the browser URL according to the selected rule type","urlslab"),onChange:e=>s({match_url:e})}),match_headers:t.createElement(u,{liveUpdate:!0,defaultValue:"",label:l.match_headers,description:a("Apply only for requests with specified HTTP headers sent from the browser. List the headers to be checked, separated by commas. For instance: HEADER-NAME, HEADER-NAME=value","urlslab"),onChange:e=>s({match_headers:e})}),match_cookie:t.createElement(u,{liveUpdate:!0,defaultValue:"",label:l.match_cookie,description:a("Apply only for requests with specified cookie sent from the browser. List the cookies to be checked, separated by commas. For instance: COOKIE_NAME, COOKIE_NAME=value","urlslab"),onChange:e=>s({match_cookie:e})}),match_params:t.createElement(u,{liveUpdate:!0,defaultValue:"",label:l.match_params,description:a("Apply only for requests with specified GET or POST parameter. List the parameters to be checked, separated by commas. For instance: query-param, query-param=value","urlslab"),onChange:e=>s({match_params:e})}),match_roles:t.createElement(P,{defaultValue:"",description:a("Apply only for requests from users with particular roles","urlslab"),onChange:e=>s({match_roles:e})}),match_capabilities:t.createElement(q,{defaultValue:"",description:a("Apply only for requests from users with certain capabilities","urlslab"),onChange:e=>s({match_capabilities:e})}),match_ip:t.createElement(u,{liveUpdate:!0,defaultValue:"",label:l.match_ip,description:a("Apply only for visitors from certain IP addresses or subnets. Provide a comma-separated list of IP addresses or subnets. For instance: 172.120.0.*, 192.168.0.0/24","urlslab"),onChange:e=>s({match_ip:e})}),match_browser:t.createElement(u,{liveUpdate:!0,defaultValue:"",label:l.match_browser,description:a("Apply for visitors using specific browsers. Input browser names or any string from User-Agent, separated by commas","urlslab"),onChange:e=>s({match_browser:e})}),is_logged:t.createElement(n,{autoClose:!0,items:o==null?void 0:o.is_logged.values,name:"is_logged",defaultValue:"A",description:a("Apply only to users with a specific login status","urlslab"),onChange:e=>s({is_logged:e})},l.is_logged),is_single:t.createElement(n,{autoClose:!0,items:i,name:"is_single",defaultValue:"A",description:a("Checks to see whether any type of single post is being displayed (excluding attachments).","urlslab"),onChange:e=>s({is_single:e})},l.is_single),is_singular:t.createElement(n,{autoClose:!0,items:i,name:"is_singular",defaultValue:"A",description:a("Checks whether a single post, attachment or page is being displayed. True is returned if either of those conditions are met.","urlslab"),onChange:e=>s({is_singular:e})},l.is_singular),is_attachment:t.createElement(n,{autoClose:!0,items:i,name:"is_attachment",defaultValue:"A",description:a("Checks if an attachment is displayed.","urlslab"),onChange:e=>s({is_attachment:e})},l.is_attachment),is_page:t.createElement(n,{autoClose:!0,items:i,name:"is_page",defaultValue:"A",description:a("Checks if a page is being displayed.","urlslab"),onChange:e=>s({is_page:e})},l.is_page),is_home:t.createElement(n,{autoClose:!0,items:i,name:"is_home",defaultValue:"A",description:a("Checks if the blog post index is being displayed. This may or may not be your home page as well.","urlslab"),onChange:e=>s({is_home:e})},l.is_home),is_front_page:t.createElement(n,{autoClose:!0,items:i,name:"is_front_page",defaultValue:"A",description:a("Checks if your home page is being displayed. This works whether your front page settings are set up to display blog posts (i.e. blog index) or a static page.","urlslab"),onChange:e=>s({is_front_page:e})},l.is_front_page),is_category:t.createElement(n,{autoClose:!0,items:i,name:"is_category",defaultValue:"A",description:a("Checks whether a category archive page is being displayed.","urlslab"),onChange:e=>s({is_category:e})},l.is_category),is_search:t.createElement(n,{autoClose:!0,items:i,name:"is_search",defaultValue:"A",description:a("Checks if a search results page is being shown.","urlslab"),onChange:e=>s({is_search:e})},l.is_search),is_tag:t.createElement(n,{autoClose:!0,items:i,name:"is_tag",defaultValue:"A",description:a("Checks whether a tag archive is being displayed.","urlslab"),onChange:e=>s({is_tag:e})},l.is_tag),is_author:t.createElement(n,{autoClose:!0,items:i,name:"is_author",defaultValue:"A",description:a("Checks if an author archive page is being displayed.","urlslab"),onChange:e=>s({is_author:e})},l.is_author),is_archive:t.createElement(n,{autoClose:!0,items:i,name:"is_archive",defaultValue:"A",description:a("Checks if any type of archive page is being displayed including category, tag, date and author archives.","urlslab"),onChange:e=>s({is_archive:e})},l.is_archive),is_sticky:t.createElement(n,{autoClose:!0,items:i,name:"is_sticky",defaultValue:"A",description:a("Checks if a post defined as sticky is displayed.","urlslab"),onChange:e=>s({is_sticky:e})},l.is_sticky),is_tax:t.createElement(n,{autoClose:!0,items:i,name:"is_tax",defaultValue:"A",description:a("Checks whether a custom taxonomy archive page is displayed.","urlslab"),onChange:e=>s({is_tax:e})},l.is_tax),is_feed:t.createElement(n,{autoClose:!0,items:i,name:"is_feed",defaultValue:"A",description:a("Checks whether the current query is for a feed.","urlslab"),onChange:e=>s({is_feed:e})},l.is_feed),is_paged:t.createElement(n,{autoClose:!0,items:i,name:"is_paged",defaultValue:"A",description:a("hecks whether the page you are currently viewing is a paginated page other than page one. Posts and pages are paginated when you use the nextpage quicktag in your content to split up large posts.","urlslab"),onChange:e=>s({is_paged:e})},l.is_paged),add_http_headers:t.createElement(_,{rows:"5",liveUpdate:!0,defaultValue:"",label:l.add_http_headers,description:a("Add custom HTTP headers transmitted from the server to the browser. Use new lines to separate headers. For instance: X-URLSLAB-HEADER=value","urlslab"),section:a("Inject Code","urlslab"),onChange:e=>s({add_http_headers:e})}),add_start_headers:t.createElement(_,{rows:"5",liveUpdate:!0,defaultValue:"",label:l.add_start_headers,description:a("Custom HTML code inserted immediately after the opening `<head>` tag, applicable to all pages","urlslab"),onChange:e=>s({add_start_headers:e})}),add_end_headers:t.createElement(_,{rows:"5",liveUpdate:!0,defaultValue:"",label:l.add_end_headers,description:a("Custom HTML code inserted immediately before the closing `</head>` tag, applicable to all pages","urlslab"),onChange:e=>s({add_end_headers:e})}),add_start_body:t.createElement(_,{rows:"5",liveUpdate:!0,defaultValue:"",label:l.add_start_body,description:a("Custom HTML code inserted immediately after the opening `<body>` tag, applicable to all pages","urlslab"),onChange:e=>s({add_start_body:e})}),add_end_body:t.createElement(_,{rows:"5",liveUpdate:!0,defaultValue:"",label:l.add_end_body,description:a("Custom HTML code inserted immediately before the closing `</body>` tag, applicable to all pages","urlslab"),onChange:e=>s({add_end_body:e})})}),[c,o==null?void 0:o.match_type,o==null?void 0:o.is_logged,i,d==null?void 0:d.match_type,s]);h.useEffect(()=>{g.setState(()=>({...g.getState(),rowEditorCells:b,deleteCSVCols:[k,"dest_url_id"]}))},[b])});export{j as default};
